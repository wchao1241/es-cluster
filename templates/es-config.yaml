apiVersion: v1
metadata:
  name: es-config-{{ template "fullname" . }}
  namespace: {{ .Values.namespace }}
kind: ConfigMap
data:
  elasticsearch.yml: |-
    cluster:
      name: ${CLUSTER_NAME}

    node:
      master: ${NODE_MASTER}
      data: ${NODE_DATA}
      name: ${HOSTNAME}

    network.host: ${NETWORK_HOST}

    path:
      data: /data/data
      logs: /data/log
      plugins: /elasticsearch/plugins
      work: /data/work

    bootstrap.mlockall: true

    http:
      enabled: ${HTTP_ENABLE}
      compression: true
      cors:
        enabled: ${HTTP_CORS_ENABLE}
        allow-origin: ${HTTP_CORS_ALLOW_ORIGIN}

    cloud:
      kubernetes:
        service: ${DISCOVERY_SERVICE}
        namespace: ${NAMESPACE}
    discovery:
      type: kubernetes
      zen:
        minimum_master_nodes: ${NUMBER_OF_MASTERS}

    index:
      number_of_shards: ${NUMBER_OF_SHARDS}
      number_of_replicas: ${NUMBER_OF_REPLICAS}

    # This is the requirement for Kibana scripted_fields when you wish to use Groovy scripts in search and data aggregation.
    # HACK: when you create a scripted_field, its default language is set to "expression", but you can easily set "groovy" in POST request for this field
    # These options are useful for https://github.com/stormpython/heatmap Kibana plugin.
    script:
      engine:
        groovy:
          inline:
            search: true
            aggs: true
    
  logging.yml: |-
    # you can override this using by setting a system property, for example -Des.logger.level=DEBUG
    es.logger.level: INFO
    rootLogger: ${es.logger.level}, console, file
    logger:
      # log action execution errors for easier debugging
      action: DEBUG
      # reduce the logging for aws, too much is logged under the default INFO
      com.amazonaws: WARN

      # gateway
      #gateway: DEBUG
      #index.gateway: DEBUG

      # peer shard recovery
      #indices.recovery: DEBUG

      # discovery
      #discovery: TRACE

      index.search.slowlog: TRACE, index_search_slow_log_file
      index.indexing.slowlog: TRACE, index_indexing_slow_log_file

    additivity:
      index.search.slowlog: false
      index.indexing.slowlog: false

    appender:
      console:
        type: console
        layout:
          type: consolePattern
          conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"

      file:
        type: dailyRollingFile
        file: ${path.logs}/${cluster.name}.log
        datePattern: "'.'yyyy-MM-dd"
        layout:
          type: pattern
          conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"

      index_search_slow_log_file:
        type: dailyRollingFile
        file: ${path.logs}/${cluster.name}_index_search_slowlog.log
        datePattern: "'.'yyyy-MM-dd"
        layout:
          type: pattern
          conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"

      index_indexing_slow_log_file:
        type: dailyRollingFile
        file: ${path.logs}/${cluster.name}_index_indexing_slowlog.log
        datePattern: "'.'yyyy-MM-dd"
        layout:
          type: pattern
          conversionPattern: "[%d{ISO8601}][%-5p][%-25c] %m%n"
